name: s_pro
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.0.1

environment:
  sdk: '>=2.18.2 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  google_fonts: ^6.2.0
  font_awesome_flutter: ^10.2.1
  google_nav_bar: ^5.0.6
  image_picker: ^1.0.8
  dashed_circle: ^0.0.2
  url_launcher: ^6.1.7
  link_text: ^0.2.0
  progress_state_button: ^1.0.4
  rounded_loading_button: ^2.1.0
  webview_flutter: ^4.8.0
  popup_card: ^0.1.0
  xen_popup_card: ^0.0.1
  mask_text_input_formatter: ^2.4.0
  email_validator: ^2.1.17
  flutter_launcher_icons: ^0.11.0
  animated_notch_bottom_bar: ^1.0.3
  curved_navigation_bar: ^1.0.3
  vrouter: ^1.2.1
  go_router: ^14.1.3
  url_strategy:
  animate_routes: ^0.0.7
  pop_alert: ^0.0.30
  rflutter_alert: ^2.0.4
  animate_do: ^3.0.2
  quickalert: ^1.0.1
  page_route_animator: ^1.0.3
  splash_screen_view: ^3.0.0
  dropdown_button2: ^2.3.9
  auto_size_text: ^3.0.0
  flutter_phone_direct_caller: ^2.1.1
  slider_button: ^2.0.0
  pie_menu: ^3.2.0
  modal_bottom_sheet: ^2.1.2
  animated_segmented_tab_control: ^2.0.0
  floating_tabbar: ^1.0.3
  flutter_screenutil: ^5.6.0
  liquid_pull_to_refresh: ^3.0.1
  pull_to_refresh: ^2.0.0

dev_dependencies:
flutter_launcher_icons: "^0.13.1"

flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "images/finallogo.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  web:
    generate: true
    image_path: "images/finallogo.png"
    background_color: "#hexcode"
    theme_color: "#hexcode"
  windows:
    generate: true
    image_path: "images/finallogo.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
    image_path: "images/finallogo.png"

  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

splash_screen_view:
  # Use color to set the background of your splash screen to a solid color.
  # Use background_image to set the background of your splash screen to a png image.
  # This is useful for gradients. The image will be stretch to the  size of the app.
  # Only one parameter can be used, color and background_image cannot both be set.

  color: "#ffffff"
  #background_image: "assets/splashscreen_image.png"

  # Optional parameters are listed below.
  #image: assets/splashscreen_image.png

  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png

  #android: false
  #ios: false
  #web: false

  #android_gravity: center
  #ios_content_mode: center
  #web_image_mode: center

  #fullscreen: true

  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  fonts:
    - family: Kanit
      fonts:
        - asset: fontpack/Kanit/Kanit-Regular.ttf
          style: normal
#        - asset: fontpack/Kanit/Kanit-Italic.ttf
#          style: italic
#        - asset: fontpack/Kanit/Kanit-ExtraLight.ttf
#          weight: 100
#        - asset: fontpack/Kanit/Kanit-Thin.ttf
#          weight: 200
#        - asset: fontpack/Kanit/Kanit-Light.ttf
#          weight: 300
#        - asset: fontpack/Kanit/Kanit-Medium.ttf
#          weight: 400
#        - asset: fontpack/Kanit/Kanit-SemiBold.ttf
#          weight: 500
#        - asset: fontpack/Kanit/Kanit-Bold.ttf
#          weight: 600
#        - asset: fontpack/Kanit/Kanit-ExtraBold.ttf
#          weight: 700
#        - asset: fontpack/Kanit/Kanit-Black.ttf
#          weight: 800

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - images/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:


  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
